name: CI Pipeline

on:
  push:
    branches: [main]
  workflow_dispatch:
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_version.outputs.version }}
    env:
      CI_ADMIN_PASSWORD: pasghetti
    services:
      mysql:
        image: mysql:8.0.29
        env:
          MYSQL_ROOT_PASSWORD: tempdbpassword
          MYSQL_DATABASE: pizza
        ports:
          - '3306:3306'
        options: >-
          --health-cmd "mysqladmin ping -ptempdbpassword" --health-interval 10s --health-start-period 10s --health-timeout 5s --health-retries 10

    steps:
      - name: Checkout Frontend
        uses: actions/checkout@v4
        with:
          path: ./jwt-pizza

      - name: Checkout Backend
        uses: actions/checkout@v4
        with:
          repository: dunemask-byu-edu-student/jwt-pizza-service # Replace with the actual owner and repository name
          path: ./jwt-pizza-service

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'

      - name: Install dependencies
        run: npm ci
        working-directory: jwt-pizza-service

      - name: Lint
        run: npm run lint
        working-directory: jwt-pizza-service

      - name: Write config file
        run: |
          echo "module.exports = {
            jwtSecret: '${{ secrets.JWT_SECRET }}',
            db: {
              connection: {
                host: '127.0.0.1',
                user: 'root',
                password: 'tempdbpassword',
                database: 'pizza',
                connectTimeout: 60000,
              },
              listPerPage: 10,
            },
            factory: {
              url: 'https://pizza-factory.cs329.click',
              apiKey: '${{ secrets.FACTORY_API_KEY }}',
            },
            adminPassword: '${{ env.CI_ADMIN_PASSWORD }}'
          };" > src/config.js
          cat src/config.js
        working-directory: jwt-pizza-service

      - name: Init DB
        run: node src/init.js Root a@jwt.com "${{ env.CI_ADMIN_PASSWORD }}"
        working-directory: jwt-pizza-service
    
      - name: Start Server in Background
        run: |
          npm run start:dev &
          echo $! > server.pid
          sleep 5
        working-directory: jwt-pizza-service

      - name: Seed DB
        run: bash ci-generate.sh http://localhost:3000
        working-directory: jwt-pizza-service

      - name: Run tests
        run: |
            npx playwright install --with-deps chromium
            npm run test:coverage

      - name: Stop Server
        if: always()
        run: |
          kill $(cat server.pid)
        working-directory: jwt-pizza-service

      - name: Update coverage
        run: |
            coverage=$(jq '.total.lines.pct' coverage/coverage-summary.json)
            color=$(echo "$coverage < 80" | bc | awk '{if ($1) print "red"; else print "green"}')
            curl -s -X POST "https://pizza-factory.cs329.click/api/badge/${{ secrets.NET_ID }}/jwtpizzacoverage?label=Coverage&value=$coverage%25&color=$color" -H "authorization: bearer ${{ secrets.FACTORY_API_KEY }}"
